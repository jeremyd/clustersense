#!/usr/bin/env ruby
# ^^^ env shebang is development purposes only
# linux packages will use Ruby 2_0_0 stable
#!/usr/bin/jruby
# ^^^ -jruby: , 1.7.3 has problems, also has no stderr support for IO.popen-

# if running direct from checkout load the local clustersense libs first
vendorlib = File.expand_path(File.join(File.dirname(File.realpath(__FILE__)), "..", "bundle", "bundler", "setup.rb"))
# linux packages use a 'hardvendor' directory
hardvendor = "/var/lib/clustersense/bundle/bundler/setup.rb"
if File.exists?(vendorlib)
  puts "vendorlib is #{vendorlib};"
  require vendorlib
elsif File.exists?(hardvendor)
  puts "vendorlib is #{hardvendor};"
  require hardvendor
else
  puts "FATAL: you must run bundle install --standalone; or could not find the vendor directory #{vendorlib} || #{hardvendor}"
  exit 1
end

require 'clustersense'

@trollop_options = Trollop::options do
  opt :list, "List available clustersense agents.", :default => false
  opt :agent, "Name of agent to startup.", :type => :string, :default => nil 
  opt :config, "Name of config file.yaml located *in the config directory. (relative name)", :type => :string, :default => nil 
end

if @trollop_options[:list]
# do the list and exit
  paths = Dir.glob("#{Clustersense::AGENTS_DIR}/*")
  paths_dirs = paths.select { |s| File.directory?(s) }
  strip_names = paths_dirs.collect do |path|
    p = File.basename(path)
  end
  puts "*** The following clustersense agents are installed:"
  strip_names.reject! { |r| r == "version" }
  puts strip_names
  exit 0
end

@config_file = @trollop_options[:config] || "config.yml"

Trollop::die("--agent <name> must be specified!") unless @trollop_options[:agent]

begin
  require "clustersense/agents/#{@trollop_options[:agent]}/#{@trollop_options[:agent]}"
rescue => e
  puts e.backtrace if e.respond_to?(:backtrace)
  Trollop::die("Failed to load #{@trollop_options[:agent]} with error: #{e}")
end

puts "#{@trollop_options[:agent]} starting."
sleep
